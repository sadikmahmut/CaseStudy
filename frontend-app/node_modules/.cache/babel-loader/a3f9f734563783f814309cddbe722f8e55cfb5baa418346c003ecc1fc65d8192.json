{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sadik\\\\Desktop\\\\DemoProject\\\\frontend-app\\\\src\\\\Configuration.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Configuration.css\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Configuration({\n  userId\n}) {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [buildingType, setBuildingType] = useState(\"\");\n  const [buildingCost, setBuildingCost] = useState(\"\");\n  const [constructionTime, setConstructionTime] = useState(\"\");\n  const [configurations, setConfigurations] = useState([]); // State to store configurations\n  const [availableBuildingTypes, setAvailableBuildingTypes] = useState([\"Farm\", \"Academy\", \"Headquarters\", \"LumberMill\", \"Barracks\"]); // State to store available building types\n  const [buildingTypeError, setBuildingTypeError] = useState(\"\"); // State to store building type error message\n  const [buildingCostError, setBuildingCostError] = useState(\"\"); // State to store building cost error message\n  const [constructionTimeError, setConstructionTimeError] = useState(\"\"); // State to store construction time error message\n\n  const handleClose = () => {\n    setOpen(false);\n    // Clear error messages when the modal is closed\n    setBuildingTypeError(\"\");\n    setBuildingCostError(\"\");\n    setConstructionTimeError(\"\");\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleCreateConfiguration = () => {\n    // Clear existing error messages\n    setBuildingTypeError(\"\");\n    setBuildingCostError(\"\");\n    setConstructionTimeError(\"\");\n    if (!buildingType || !buildingCost.trim() || !constructionTime.trim()) {\n      if (!buildingType) {\n        setBuildingTypeError(\"Please select a building type.\");\n      }\n      if (!buildingCost.trim()) {\n        setBuildingCostError(\"Please fill in building cost.\");\n      }\n      if (!constructionTime.trim()) {\n        setConstructionTimeError(\"Please fill in construction time.\");\n      }\n      return;\n    }\n    const cost = parseFloat(buildingCost);\n    const time = parseFloat(constructionTime);\n    if (isNaN(cost) || cost <= 0) {\n      setBuildingCostError(\"Building cost must be a number greater than 0\");\n      return;\n    }\n    if (isNaN(time) || time < 30 || time > 1800) {\n      setConstructionTimeError(\"Construction time must be a number between 30 and 1800\");\n      return;\n    }\n    const data = {\n      UserId: userId,\n      BuildingType: buildingType,\n      BuildingCost: parseFloat(buildingCost),\n      ConstructionTime: parseFloat(constructionTime)\n    };\n    axios.post(\"https://localhost:44388/api/Auth/CreateConfiguration\", data).then(response => {\n      handleClose();\n      // Reload configurations after creating one\n      loadConfigurations();\n    }).catch(error => {\n      alert(\"Error creating configuration: \" + error.message);\n    });\n  };\n\n  // Function to load configurations from the API\n  const loadConfigurations = () => {\n    axios.get(`https://localhost:44388/api/Auth/ListConfigurations/${userId}`).then(response => {\n      setConfigurations(response.data);\n      // Extract existing building types from configurations\n      const existingBuildingTypes = response.data.map(config => config.buildingType);\n      // Filter available building types\n      const filteredBuildingTypes = availableBuildingTypes.filter(type => !existingBuildingTypes.includes(type));\n      setAvailableBuildingTypes(filteredBuildingTypes);\n    }).catch(error => {\n      // Handle the error, e.g., by displaying an error message\n    });\n  };\n  useEffect(() => {\n    loadConfigurations(); // Load configurations when the component mounts\n  }, []);\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"configuration-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Configuration Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Building Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Building Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Construction Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: configurations.map((config, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: config.buildingType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: config.buildingCost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: config.constructionTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, config.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-building-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleOpen,\n        children: \"Add Building\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: handleClose,\n      open: open,\n      className: \"modal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Building Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setBuildingType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Building Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), availableBuildingTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: buildingTypeError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Building Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setBuildingCost(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: buildingCostError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Construction Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setConstructionTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: constructionTimeError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateConfiguration,\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Configuration, \"tJRQE2J58Y0DDtZA0x83u/syPP4=\");\n_c = Configuration;\nexport default Configuration;\nvar _c;\n$RefreshReg$(_c, \"Configuration\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","axios","Modal","jsxDEV","_jsxDEV","Configuration","userId","_s","open","setOpen","buildingType","setBuildingType","buildingCost","setBuildingCost","constructionTime","setConstructionTime","configurations","setConfigurations","availableBuildingTypes","setAvailableBuildingTypes","buildingTypeError","setBuildingTypeError","buildingCostError","setBuildingCostError","constructionTimeError","setConstructionTimeError","handleClose","handleOpen","handleCreateConfiguration","trim","cost","parseFloat","time","isNaN","data","UserId","BuildingType","BuildingCost","ConstructionTime","post","then","response","loadConfigurations","catch","error","alert","message","get","existingBuildingTypes","map","config","filteredBuildingTypes","filter","type","includes","token","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","index","id","onClick","onClose","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/Sadik/Desktop/DemoProject/frontend-app/src/Configuration.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Configuration.css\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nfunction Configuration({ userId }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [buildingType, setBuildingType] = useState(\"\");\r\n  const [buildingCost, setBuildingCost] = useState(\"\");\r\n  const [constructionTime, setConstructionTime] = useState(\"\");\r\n  const [configurations, setConfigurations] = useState([]); // State to store configurations\r\n  const [availableBuildingTypes, setAvailableBuildingTypes] = useState([\r\n    \"Farm\",\r\n    \"Academy\",\r\n    \"Headquarters\",\r\n    \"LumberMill\",\r\n    \"Barracks\",\r\n  ]); // State to store available building types\r\n  const [buildingTypeError, setBuildingTypeError] = useState(\"\"); // State to store building type error message\r\n  const [buildingCostError, setBuildingCostError] = useState(\"\"); // State to store building cost error message\r\n  const [constructionTimeError, setConstructionTimeError] = useState(\"\"); // State to store construction time error message\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    // Clear error messages when the modal is closed\r\n    setBuildingTypeError(\"\");\r\n    setBuildingCostError(\"\");\r\n    setConstructionTimeError(\"\");\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCreateConfiguration = () => {\r\n    // Clear existing error messages\r\n    setBuildingTypeError(\"\");\r\n    setBuildingCostError(\"\");\r\n    setConstructionTimeError(\"\");\r\n\r\n    if (!buildingType || !buildingCost.trim() || !constructionTime.trim()) {\r\n      if (!buildingType) {\r\n        setBuildingTypeError(\"Please select a building type.\");\r\n      }\r\n      if (!buildingCost.trim()) {\r\n        setBuildingCostError(\"Please fill in building cost.\");\r\n      }\r\n      if (!constructionTime.trim()) {\r\n        setConstructionTimeError(\"Please fill in construction time.\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    const cost = parseFloat(buildingCost);\r\n    const time = parseFloat(constructionTime);\r\n\r\n    if (isNaN(cost) || cost <= 0) {\r\n      setBuildingCostError(\"Building cost must be a number greater than 0\");\r\n      return;\r\n    }\r\n\r\n    if (isNaN(time) || time < 30 || time > 1800) {\r\n      setConstructionTimeError(\"Construction time must be a number between 30 and 1800\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      UserId: userId,\r\n      BuildingType: buildingType,\r\n      BuildingCost: parseFloat(buildingCost),\r\n      ConstructionTime: parseFloat(constructionTime),\r\n    };\r\n\r\n    axios\r\n      .post(\"https://localhost:44388/api/Auth/CreateConfiguration\", data)\r\n      .then((response) => {\r\n        handleClose();\r\n        // Reload configurations after creating one\r\n        loadConfigurations();\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Error creating configuration: \" + error.message);\r\n      });\r\n  };\r\n\r\n  // Function to load configurations from the API\r\n  const loadConfigurations = () => {\r\n    axios\r\n      .get(`https://localhost:44388/api/Auth/ListConfigurations/${userId}`)\r\n      .then((response) => {\r\n        setConfigurations(response.data);\r\n        // Extract existing building types from configurations\r\n        const existingBuildingTypes = response.data.map((config) => config.buildingType);\r\n        // Filter available building types\r\n        const filteredBuildingTypes = availableBuildingTypes.filter(\r\n          (type) => !existingBuildingTypes.includes(type)\r\n        );\r\n        setAvailableBuildingTypes(filteredBuildingTypes);\r\n      })\r\n      .catch((error) => {\r\n        // Handle the error, e.g., by displaying an error message\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadConfigurations(); // Load configurations when the component mounts\r\n  }, []);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"configuration-container\">\r\n      <h2>Configuration Page</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Building Type</th>\r\n            <th>Building Cost</th>\r\n            <th>Construction Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {configurations.map((config, index) => (\r\n            <tr key={config.id}>\r\n              <td>{index + 1}</td>\r\n              <td>{config.buildingType}</td>\r\n              <td>{config.buildingCost}</td>\r\n              <td>{config.constructionTime}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"add-building-button\">\r\n        <button type=\"button\" onClick={handleOpen}>\r\n          Add Building\r\n        </button>\r\n      </div>\r\n      <Modal onClose={handleClose} open={open} className=\"modal-container\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-row\">\r\n            <label>Building Type</label>\r\n            <select onChange={(e) => setBuildingType(e.target.value)}>\r\n              <option value=\"\">Select Building Type</option>\r\n              {availableBuildingTypes.map((type) => (\r\n                <option key={type} value={type}>\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div className=\"error-message\">{buildingTypeError}</div>\r\n          </div>\r\n          <div className=\"modal-row\">\r\n            <label>Building Cost</label>\r\n            <input type=\"text\" onChange={(e) => setBuildingCost(e.target.value)} />\r\n            <div className=\"error-message\">{buildingCostError}</div>\r\n          </div>\r\n          <div className=\"modal-row\">\r\n            <label>Construction Time</label>\r\n            <input type=\"text\" onChange={(e) => setConstructionTime(e.target.value)} />\r\n            <div className=\"error-message\">{constructionTimeError}</div>\r\n          </div>\r\n          <div className=\"modal-row\">\r\n            <button onClick={handleCreateConfiguration}>OK</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Configuration;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}